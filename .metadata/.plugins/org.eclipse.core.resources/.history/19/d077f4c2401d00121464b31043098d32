package Gestion;

import java.sql.SQLException;
import java.util.Calendar;
import java.util.Vector;

import Clases.Cliente;
import Clases.Pago;
import Clases.Pedido;
import Clases.Venta;
import General.BaseDatos;

public class GestionarPedidos 
{
	public static Vector<Pedido> pedidos = new Vector<Pedido>();
	
	public static void AgregarPedido(Pedido pedido) throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException
	{				
			BaseDatos.NonQuery("INSERT INTO pedido (cod_pedido,cod_cliente,cod_mercaderia,dia_entrega) VALUES ("+pedido.getCodigo()+","+pedido.getCod_cliente()+
					","+pedido.getCod_mercaderia()+",'"+pedido.getFecha_entrega()+"')");
			pedidos.add(new Pedido(pedido.getCodigo(),pedido.getCod_cliente(),pedido.getCod_mercaderia(),pedido.getFecha_entrega()));
	}
	public static Vector<Pedido> BuscarPedido(String value,String campo) throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException
	{		
			String string = "SELECT * FROM Pedido WHERE "+campo+" LIKE '"+value+"'";
			System.out.println(string);
			return BaseDatos.PedidoQuery(string);	
	}
	public static void EliminarPedido(Pedido p) throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException
	{		
			String string = "DELETE * FROM Pedido WHERE cod_pedido LIKE '"+p.getCodigo()+"'";
			System.out.println(string);
			BaseDatos.NonQuery(string);	
	}
	public static void Cargar() throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException
	{
		pedidos = BaseDatos.PedidoQuery("SELECT * FROM Pedido");
		for(int i=0; i<pedidos.size();i++)
		{
			String[] fecha1 = pedidos.get(i).getFecha_entrega().split("-");
			Calendar cal = Calendar.getInstance();
			System.out.println(Integer.parseInt(fecha1[1]));
			System.out.println(cal.get(Calendar.MONTH)+1);
			if(Integer.parseInt(fecha1[1])<=cal.get(Calendar.MONTH)+1) GenerarVenta(pedidos.get(i));
			else if(Integer.parseInt(fecha1[1])==cal.get(Calendar.MONTH)+1 && Integer.parseInt(fecha1[2])<=cal.get(Calendar.DATE))GenerarVenta(pedidos.get(i));
		}
	}
	public static void GenerarVenta(Pedido p) throws InstantiationException, IllegalAccessException, ClassNotFoundException, SQLException
	{
		int cod_venta = -1;
		for(int i=0;true;i++)
		{
			for(int j=0;j<GestionarVentas.ventas.size();j++)
			{
				if(GestionarCaja.cobros.get(j).getCodigo() == i) break;
				else if(j+1 == GestionarCaja.cobros.size()) cod_venta = i;
			}
			if(cod_venta != -1) break;
		}
		
		GestionarVentas.AgregarVenta(new Venta(cod_venta,p.getCod_cliente(),p.getFecha_entrega(),p.getCod_mercaderia(),1));
		GestionarPedidos.EliminarPedido(p);
	}
}
